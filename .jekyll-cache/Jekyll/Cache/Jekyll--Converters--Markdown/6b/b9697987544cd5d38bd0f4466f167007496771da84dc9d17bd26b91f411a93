I"p6<h2 id="0x00-前言">0x00 前言</h2>
<hr />

<p>Outlook MAPI提供了一组访问Outlook的接口，用来扩展Outlook应用程序的开发，本文将会介绍Outlook MAPI的基本用法，开源一份Outlook MAPI的实现代码mapi_tool，便于后续的二次开发。</p>

<h2 id="0x01-简介">0x01 简介</h2>
<hr />

<p>本文将要介绍以下内容：</p>

<ul>
  <li>基本知识</li>
  <li>使用Outlook MAPI访问Outlook资源</li>
  <li>开源代码mapi_tool</li>
  <li>mapi_tool功能介绍</li>
  <li>多种环境下的利用思路</li>
</ul>

<h2 id="0x02-基本知识">0x02 基本知识</h2>
<hr />

<p>参考资料：</p>

<p>https://docs.microsoft.com/en-us/office/client-developer/outlook/mapi/outlook-mapi-reference</p>

<p>Outlook MAPI的使用前提：需要安装Outlook客户端</p>

<p>Outlook MAPI同EWS的区别：</p>

<ul>
  <li>Outlook MAPI用来访问Outlook客户端中的资源</li>
  <li>EWS用来访问Exchange服务器中的资源</li>
</ul>

<p>关于EWS的使用可以参考之前的文章<a href="https://3gstudent.github.io/Exchange-Web-Service(EWS)%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97">《Exchange Web Service(EWS)开发指南》</a></p>

<p>Outlook客户端中的用户邮件存储在后缀名为ost的文件中，和Exchange服务器中的数据库保持一致</p>

<p>ost文件的默认保存位置：<code class="language-plaintext highlighter-rouge">%LOCALAPPDATA%\Microsoft\Outlook\</code></p>

<p>MAPI主要包括以下三个功能：</p>

<ul>
  <li>Address Books，设置E-mail type、protocol等参数</li>
  <li>Transport，文件的发送和接收</li>
  <li>Message Store，发送接收等信息的处理</li>
</ul>

<h2 id="0x03-使用outlook-mapi访问outlook资源">0x03 使用Outlook MAPI访问Outlook资源</h2>
<hr />

<h3 id="1安装outlook客户端并配置参数">1.安装Outlook客户端并配置参数</h3>

<h3 id="2启动outlook客户端进行用户登录">2.启动Outlook客户端进行用户登录</h3>

<h3 id="3使用c-sharp开发程序实现读取收件箱邮件的功能">3.使用C Sharp开发程序，实现读取收件箱邮件的功能</h3>

<p>参考资料：</p>

<p>https://docs.microsoft.com/en-us/dotnet/api/microsoft.office.interop.outlook?view=outlook-pia</p>

<p>https://docs.microsoft.com/en-us/office/vba/api/outlook.namespace</p>

<p>开发环境：VS2015</p>

<p>新建工程，选择控制台应用程序，引用文件：<code class="language-plaintext highlighter-rouge">Microsoft.Office.Interop.Outlook.dll</code></p>

<p><strong>注：</strong></p>

<p>安装Outlook客户端后，可在<code class="language-plaintext highlighter-rouge">C:\Windows\assembly\GAC_MSIL\Microsoft.Office.Interop.Outlook\</code>下获得Microsoft.Office.Interop.Outlook.dll</p>

<p>Microsoft.Office.Interop.Outlook.dll要同Outlook的版本保持一致</p>

<p>Microsoft.Office.Interop.Outlook.dll的<code class="language-plaintext highlighter-rouge">文件属性</code>-<code class="language-plaintext highlighter-rouge">Details</code>-<code class="language-plaintext highlighter-rouge">Product name</code>对应支持Outlook的版本，Product version对应具体的Outlook版本，如下图</p>

<p><img src="https://raw.githubusercontent.com/3gstudent/BlogPic/master/2020-4-17/2-1.png" alt="Alt text" /></p>

<p>Product version对应具体的Outlook版本可参考：</p>

<p>https://docs.microsoft.com/en-us/Exchange/new-features/build-numbers-and-release-dates?redirectedfrom=MSDN&amp;view=exchserver-2019</p>

<p>C Sharp代码示例：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>using System;
using Microsoft.Office.Interop.Outlook;
namespace ConsoleApplication3
{
    class Program
    {
        static void Main(string[] args)
        {
            Microsoft.Office.Interop.Outlook.Application app = new Microsoft.Office.Interop.Outlook.Application();
            Microsoft.Office.Interop.Outlook.NameSpace ns = app.GetNamespace("MAPI");
            Microsoft.Office.Interop.Outlook.MAPIFolder inbox = ns.GetDefaultFolder(Microsoft.Office.Interop.Outlook.OlDefaultFolders.olFolderInbox);
            Microsoft.Office.Interop.Outlook.Items items = inbox.Items;
            Console.WriteLine("Size:" + inbox.Items.Count);
            foreach (var item in items)
            {
                var mail = item as Microsoft.Office.Interop.Outlook.MailItem;
                if (mail != null)
                {
                    if(mail.UnRead==true)
                        Console.WriteLine("[+] UnRead Mail");
                    else
                        Console.WriteLine("[+] Mail");
                    Console.WriteLine("[*] Subject:" + mail.Subject);
                    Console.WriteLine("[*] From:" + mail.SenderName);
                    Console.WriteLine("[*] To:" + mail.To);
                    Console.WriteLine("[*] CC:" + mail.CC);
                    Console.WriteLine("[*] ReceivedTime:" + mail.ReceivedTime);                   
                    if(mail.Attachments.Count&gt;0)
                    {
                        Console.WriteLine("[&gt;] Attachments:" + mail.Attachments.Count);
                        Microsoft.Office.Interop.Outlook.Attachments attachments = mail.Attachments;
                        foreach (Microsoft.Office.Interop.Outlook.Attachment att in attachments)
                        {
                            Console.WriteLine("    Name:" + att.FileName);
                        }
                    }
                    Console.WriteLine("[*] Body:\r\n" + mail.Body);                                
                    Console.WriteLine("[*] OutlookVersion:" + mail.OutlookVersion);
                    Console.WriteLine("[*] EntryID:" + mail.EntryID);
                }
            }
        }
    }
}
</code></pre></div></div>

<p>代码执行后将会列举收件箱中的邮件，输出以下内容：</p>

<ul>
  <li>收件箱邮件个数</li>
  <li>是否已读</li>
  <li>主题</li>
  <li>发件人</li>
  <li>收件人</li>
  <li>抄送</li>
  <li>接收时间</li>
  <li>附件名称</li>
  <li>正文内容</li>
  <li>Outlook版本</li>
  <li>EntryID</li>
</ul>

<p>代码执行后，Outlook客户端会弹出警告，如下图</p>

<p><img src="https://raw.githubusercontent.com/3gstudent/BlogPic/master/2020-4-17/2-2.png" alt="Alt text" /></p>

<p>选择允许后，成功获得收件箱信息，如下图</p>

<p><img src="https://raw.githubusercontent.com/3gstudent/BlogPic/master/2020-4-17/2-3.png" alt="Alt text" /></p>

<p>弹出警告的原因：当前系统的防病毒软件处于非活动状态或过期</p>

<p>参考资料：</p>

<p>https://support.microsoft.com/en-us/help/3189806/a-program-is-trying-to-send-an-e-mail-message-on-your-behalf-warning-i</p>

<h4 id="两种关闭方法">两种关闭方法：</h4>

<p>1.开启并更新防病毒软件</p>

<p>2.修改注册表关闭警告</p>

<p>注册表位置：<code class="language-plaintext highlighter-rouge">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Office\&lt;x.0&gt;\Outlook\Security</code></p>

<p>64位操作系统安装32位Office的注册表位置：<code class="language-plaintext highlighter-rouge">HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Office\&lt;x.0&gt;\Outlook\Security</code></p>

<p><code class="language-plaintext highlighter-rouge">&lt;x.0&gt;</code>同Office的版本保持一致，例如Office2010的值为<code class="language-plaintext highlighter-rouge">14.0</code>，Office2013的值为<code class="language-plaintext highlighter-rouge">15.0</code></p>

<p>注册表项：<code class="language-plaintext highlighter-rouge">ObjectModelGuard</code>，类型：<code class="language-plaintext highlighter-rouge">REG_DWORD</code>，值为<code class="language-plaintext highlighter-rouge">2</code></p>

<h4 id="在使用时需要注意的细节如下">在使用时需要注意的细节如下：</h4>

<p>1.引用的Microsoft.Exchange.WebServices.dll要与Outlook客户端的版本保持一致</p>

<p>2.默认配置下，部分操作不会弹出警告</p>

<p>例如：</p>

<ul>
  <li>列出收件箱邮件个数</li>
  <li>列出邮件主题</li>
  <li>列出邮件接收时间</li>
  <li>列出邮件附件名称</li>
</ul>

<h4 id="3如果后台没有运行outlook客户端">3.如果后台没有运行Outlook客户端</h4>

<p>通过程序可读取当前Outlook客户端中的资源，但是获取资源后还会弹框提示要求输入凭据，如下图</p>

<p><img src="https://raw.githubusercontent.com/3gstudent/BlogPic/master/2020-4-17/2-4.png" alt="Alt text" /></p>

<p>如果选择了记住凭据，那么后续操作不会要求输入凭据，关于凭据的使用可以参考之前的文章<a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E4%B8%ADCredential-Manager%E7%9A%84%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96">《渗透技巧——Windows中Credential Manager的信息获取》</a></p>

<h2 id="0x04-开源实现代码mapi_tool">0x04 开源实现代码mapi_tool</h2>
<hr />

<p>代码地址：https://github.com/3gstudent/Homework-of-C-Sharp/blob/master/mapi_tool.cs</p>

<p>在编译上面，为了增加通用性，代码支持使用csc.exe进行编译</p>

<p>支持.Net 3.5或更高版本，编译命令：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C:\Windows\Microsoft.NET\Framework64\v3.5\csc.exe mapi_tool.cs /r:Microsoft.Office.Interop.Outlook.dll
or
C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe mapi_tool.cs /r:Microsoft.Office.Interop.Outlook.dll
</code></pre></div></div>

<p>为了便于测试，我上传了Office2010下的<a href="https://github.com/3gstudent/Homework-of-C-Sharp/blob/master/Office14-Microsoft.Office.Interop.OutlookMicrosoft.Office.Interop.Outlook.dll">Microsoft.Office.Interop.Outlook.dll</a>和Office2013下的<a href="https://github.com/3gstudent/Homework-of-C-Sharp/blob/master/Office15-Microsoft.Office.Interop.Outlook.dll">Microsoft.Office.Interop.Outlook.dll</a></p>

<p>在功能实现上，对是否弹出安全提示做了区分</p>

<p>不会弹出安全提示的功能：</p>

<ul>
  <li>获得所有文件夹中的邮件长度</li>
  <li>获得配置信息，包括CurrentProfileName、ExchangeMailboxServerName、ExchangeMailboxServerVersion</li>
  <li>列出指定位置的邮件，包括邮件主题、接收时间、附件中的文件名称和EntryID</li>
  <li>列出指定位置的未读邮件，包括邮件主题、接收时间、附件中的文件名称和EntryID</li>
</ul>

<p>会弹出安全提示的功能：</p>

<ul>
  <li>获得配置信息，包括Account-DisplayName、Account-SmtpAddress、Account-AutoDiscoverXml、Account-AccountType</li>
  <li>获得联系人信息</li>
  <li>获得GlobalAddress</li>
  <li>列出指定位置的邮件，包括邮件主题、发件人、收件人、抄送、接收时间、附件中的文件名称、正文内容、Outlook版本和EntryID</li>
  <li>列出指定位置的未读邮件，包括邮件主题、发件人、收件人、抄送、接收时间、附件中的文件名称、正文内容、Outlook版本和EntryID</li>
  <li>保存指定邮件中的附件</li>
</ul>

<p>在代码开发上，需要注意以下细节：</p>

<ol>
  <li>保存附件时需要使用绝对路径</li>
  <li>获得联系人列表时，数组开始的位置为1，而不是0</li>
  <li>获得配置信息时，数组开始的位置为1，而不是0</li>
</ol>

<h2 id="0x05-多种环境下的利用思路">0x05 多种环境下的利用思路</h2>
<hr />

<h3 id="1正在运行outlook客户端">1.正在运行Outlook客户端</h3>

<p>通过<a href="https://github.com/3gstudent/Homework-of-C-Sharp/blob/master/mapi_tool.cs">mapi_tool</a>可以对Outlook客户端的资源进行访问，某些操作有可能会弹出安全提示</p>

<p>关闭安全提示的两种方法：</p>

<ul>
  <li>开启并更新防病毒软件</li>
  <li>修改注册表关闭警告</li>
</ul>

<h4 id="导出outlook客户端所有邮件信息的方法">导出Outlook客户端所有邮件信息的方法：</h4>

<p>(1)获得ost文件</p>

<p>ost文件的默认保存位置：<code class="language-plaintext highlighter-rouge">%LOCALAPPDATA%\Microsoft\Outlook\</code></p>

<p>无法直接复制，提示文件被占用</p>

<p>可以使用Joe Bialek的<a href="https://github.com/3gstudent/NinjaCopy">NinjaCopy</a>复制被占用的文件</p>

<p>(2)将ost文件转换成pst文件</p>

<p>工具有很多，这个提供一种：Advanced Exchange Recovery</p>

<p>(3)将pst文件导入Outlook客户端</p>

<h3 id="2没有启动outlook客户端">2.没有启动Outlook客户端</h3>

<p>通过<a href="https://github.com/3gstudent/Homework-of-C-Sharp/blob/master/mapi_tool.cs">mapi_tool</a>可以对Outlook客户端的资源进行访问，某些操作有可能会弹出安全提示</p>

<p>如果执行需要同服务器进行交互的操作，例如获取配置信息，会弹框提示要求输入凭据，如果凭据管理器已经存储了对应的凭据，就不会弹框提示</p>

<p>查看已保存凭据的命令：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cmdkey /list
</code></pre></div></div>

<h4 id="导出outlook客户端所有邮件信息的方法-1">导出Outlook客户端所有邮件信息的方法：</h4>

<p>(1)获得ost文件</p>

<p>可直接复制ost文件</p>

<p>(2)将ost文件转换成pst文件</p>

<p>方法同上</p>

<p>(3)将pst文件导入Outlook客户端</p>

<p>方法同上</p>

<h2 id="0x06-小结">0x06 小结</h2>
<hr />

<p>本文介绍了使用Outlook MAPI访问Outlook资源的方法，开源代码<a href="https://github.com/3gstudent/Homework-of-C-Sharp/blob/master/mapi_tool.cs">mapi_tool</a>，便于后续的二次开发。</p>

<hr />

<p><a href="https://github.com/3gstudent/feedback/issues/new">LEAVE A REPLY</a></p>

:ET